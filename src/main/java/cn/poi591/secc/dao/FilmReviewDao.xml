<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.poi591.secc.dao.FilmReviewDao">

	<insert id="add" useGeneratedKeys="true" parameterType="cn.poi591.secc.entity.FilmReview"
	  keyProperty="id">
		INSERT INTO
		`t_film_review`(`film_id`,`user_id`,`score`,`title`,`text`,`is_spoiler`,`is_private`,`create_time`)
		VALUES(#{filmId},#{userId},#{score},#{title},#{text},#{isSpoiler},#{isPrivate},now());
	</insert>

	<select id="findById" resultType="cn.poi591.secc.entity.FilmReview">
		SELECT * FROM `t_film_review`
		WHERE `id`=#{id};
	</select>


	<select id="getFilmScore" parameterType="cn.poi591.secc.entity.Film"
		resultType="cn.poi591.secc.dto.FilmScore">
		SELECT
		COUNT(*) AS `count`,
		AVG(`score`) AS `average`
		FROM
		`t_film_review` WHERE `film_id`=#{id};
	</select>

	<!-- 查找当前电影所有影评 -->
	<select id="findFilmReviewByFilm" parameterType="cn.poi591.secc.entity.Film"
		resultType="cn.poi591.secc.entity.FilmReview">
		SELECT * FROM `t_film_review`
		WHERE LENGTH(`title`)>0 AND
		`film_id`=#{id};
	</select>



	<!-- 获取当前电影的影评总数 -->
	<select id="getFilmReviewCount" parameterType="cn.poi591.secc.entity.Film"
		resultType="java.lang.Integer">
		SELECT COUNT(*) FROM t_film_review WHERE film_id=#{id} AND 
		LENGTH(`title`)>0 AND is_private=FALSE;
	</select>

	<!-- 根据影评找用户 -->
	<select id="findUserByFilmReview" parameterType="cn.poi591.secc.entity.FilmReview"
		resultType="cn.poi591.secc.entity.User">
		SELECT * FROM t_user WHERE id=#{review.user_id};
	</select>

	<!-- 根据电影和用户找到一篇影评 -->
	<select id="getFilmReview" 
		resultType="cn.poi591.secc.entity.FilmReview">
		SELECT * FROM t_film_review
		WHERE film_id=#{film.id}
		AND user_id=#{user.id} LIMIT 1;
	</select>
	
	<!-- 随机查询出若干影评 -->
	<select id="findFilmReviewDetailRandom" parameterType="java.lang.Integer" resultMap="FilmReviewDetailMap">
		SELECT * FROM t_film_review
		WHERE LENGTH(`title`)>0 AND is_private=FALSE
		ORDER BY RAND()
		LIMIT #{count};
	</select>
	
	<!-- 获取当前电影的最新影评，需要设置起始位置和项数 -->
	<select id="getFilmReviewDetailLatest" resultMap="FilmReviewDetailMap">
		SELECT * FROM t_film_review
		WHERE film_id=#{film.id} AND
		LENGTH(`title`)>0 AND is_private=FALSE
		ORDER BY create_time DESC
		LIMIT #{start},#{offset};
	</select>
	
	<!-- 获取当前电影的最好影评，需要设置起始位置和项数 -->
	<select id="getFilmReviewDetailBest" resultMap="FilmReviewDetailMap">
		SELECT * FROM t_film_review
		WHERE film_id=#{film.id} 
		AND LENGTH(`title`)>0 AND `is_private`=FALSE
		ORDER BY 
		(SELECT COUNT(*) FROM t_film_review_ooxx
		WHERE film_review_id = t_film_review.id AND `type`='oo') DESC, 
		(SELECT COUNT(*) FROM t_film_review_ooxx
		WHERE film_review_id = t_film_review.id AND `type`='xx') ASC
		LIMIT #{start},#{offset};
	</select>
	
	<!-- 根据电影id获取用户投票数 -->
	<select id="getVoteByFilmReviewId" resultType="cn.poi591.secc.dto.Vote">
		SELECT 
		(SELECT COUNT(*) FROM t_film_review_ooxx
		WHERE film_review_id=#{filmId} AND `type`='oo') AS `oo`,
		(SELECT COUNT(*) FROM t_film_review_ooxx
		WHERE film_review_id=#{filmId} AND `type`='xx') AS `xx`;
	</select>
	
	<!-- 影评：影评数据外，还带有作者、投票 -->
	<resultMap id="FilmReviewDetailMap" type="cn.poi591.secc.dto.FilmReviewDetail">
		<id property="id" column="id"/>
		<!-- 在FilmReview基础上多携带一个User作为作者 -->
		<association property="user" column="user_id" 
			select="cn.poi591.secc.dao.UserDao.findById" />
		<!-- 带着Film -->
		<association property="film" column="film_id" 
			select="cn.poi591.secc.dao.FilmDao.findById" />
		<!-- 影评的赞踩投票 -->
		<association property="vote" column="id"
			select="cn.poi591.secc.dao.FilmReviewDao.getVoteByFilmReviewId" />
	</resultMap>
	
	<!-- 确认影评是否被用户评价过 -->
	<select id="checkFilmReviewOOXXExist" resultType="java.lang.Boolean">
		SELECT EXISTS (
		SELECT * FROM t_film_review_ooxx
		WHERE film_review_id=#{filmReview.id}
		AND operator_id=#{user.id}
		);
	</select>
	
	<!-- 添加一个影评被用户评价的关系 -->
	<insert id="addFilmReviewOOXX" >
		INSERT INTO t_film_review_ooxx(film_review_id,operator_id,`type`)
		VALUES(#{filmReview.id},#{user.id},#{type});
	</insert>
	
	<!-- 根据影评id查询详细影评数据 -->
	<select id="findFilmReviewDetailById" parameterType="java.lang.Integer" resultMap="FilmReviewDetailMap">
		SELECT * FROM t_film_review
		WHERE id=#{reviewId}
		AND LENGTH(`title`)>0 AND `is_private`=FALSE;
	</select>
</mapper>